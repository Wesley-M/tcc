{"../../repos/2012-paper-diginorm/": [], "../../repos/acme/": ["import unittest\n", "from acme.testing import test_utils\n", "from unittest import mock\n", "from absl.testing import parameterized\n", "from acme.adders.reverb import test_utils\n"], "../../repos/albumentations/": ["import pytest\n", "from unittest import mock\n"], "../../repos/Allen_Downey\u2019s_Think_Bayes_Code/": [], "../../repos/altair/": ["from altair import examples\n", "import pytest\n"], "../../repos/Annoy/": ["import unittest\n"], "../../repos/Apache_SINGA/": ["import unittest\n"], "../../repos/astroML/": ["import pytest\n"], "../../repos/astropy/": ["from pytest import raises\n", "from unittest import mock\n", "from .test_representation import unitphysics  # this fixture is used below # noqa\n", "from hypothesis import assume, example, given, target\n", "import pytest\n", "    import pytest\n", "import hypothesis\n"], "../../repos/auto_ml/": [], "../../repos/Auto_ViML/": [], "../../repos/AutoViz/": ["import unittest\r\n"], "../../repos/Backprop/": [], "../../repos/bayeso/": ["import pytest\n"], "../../repos/BayesPy/": [], "../../repos/BentoML/": ["import pytest\n"], "../../repos/BigARTM/": ["import unittest\n", "  import unittest  # pylint: disable=g-import-not-at-top\n", "  import unittest2 as unittest\n", "import pytest\n", "  import unittest\n", "  import unittest2 as unittest  # PY26, pylint: disable=g-import-not-at-top\n", "  import unittest2 as unittest  #PY26\n"], "../../repos/BigML/": [], "../../repos/BioPy/": [], "../../repos/Blaze/": ["import pytest\n"], "../../repos/bokeh/": ["from pytest import raises\n", "import pytest  # noqa isort:skip\n", "import pytest\n", "from flaky import flaky\n", "import pytest ; pytest\n"], "../../repos/Bowtie/": ["import pytest\n"], "../../repos/bqplot/": ["import pytest\n"], "../../repos/Brainstorm/": ["import pytest\n"], "../../repos/ByteHub/": ["import pytest\n"], "../../repos/CAEs_for_Data_Assimilation/": ["import pytest\n"], "../../repos/Cartopy/": ["import pytest\n", "from unittest import mock\n"], "../../repos/Catalyst/": ["import pytest  # noqa: F401\n", "from pytest import mark\n", "import pytest\n", "import unittest\n"], "../../repos/CatBoost/": ["import unittest\n", "        import doctest\n", "import runtests\n", "    import unittest, contextlib, tempfile, shutil\n", "    from unittest import mock\n", "from testpath import modified_env\n", "from pytest import skip\n", "import sys, platform, re, pytest\n", "from pytest import approx\n", "from doctest import DocTestSuite\n", "from pytest import raises as assert_raises\n", "from unittest import TestCase, main, SkipTest\n", "from hypothesis import assume, given, strategies as st\n", "import os, unittest\n", "from hypothesis import given, settings, Verbosity, assume\n", "from doctest import (REPORTING_FLAGS, REPORT_ONLY_FIRST_FAILURE,\n", "from pytest import importorskip\n", "        from unittest import TestLoader\n", "import unittest, os, errno\n", "    import sys, pytest\n", "import pytest  # noqa\n", "    from doctest import _SpoofOut\n", "from hypothesis import given\n", "from unittest import mock\n", "from pytest import param\n", "    import unittest\n", "import pytest\n", "        import pytest\n", "from pytest import mark\n", "from nose import SkipTest\n", "            import pytest\n", "import doctest\n", "import pytest, math, re\n", "from pytest import raises\n", "from pytest import raises as assert_raises, warns\n", "from pytest import hookimpl\n", "import test_helpers\n", "        from unittest import skip as skip_win32\n", "from _pytest.fixtures import fixture\n", "import sys, unittest\n", "        import nose  # noqa: F401\n", "from pytest import raises, warns\n", "    import pytest\n", "from unittest import TestCase\n", "from nose import with_setup\n", "import hypothesis\n", "from hypothesis import strategies as st\n", "import unittest, sys\n", "import sys, unittest, struct, math, ctypes\n", "        import hypothesis  # noqa\n", "        from pytest import warns\n", "    from pytest import skip\n", "import unittest, doctest, sys\n", "    from nose import SkipTest\n", "from unittest import skipIf, TestCase\n", "    import doctest\n", "from hypothesis import assume, given\n", "from parameterized import parameterized\n", "from doctest import DocTestFinder, DocTestRunner, TestResults\n", "    import nose\n", "from hypothesis import assume, example, given, settings, strategies as st\n", "from hypothesis import given, assume\n", "import unittest, difflib, pdb, tempfile\n", "from unittest import TestLoader\n"], "../../repos/Chainer/": ["import test_utils\n", "import unittest\n", "import pytest\n", "from chainer.testing import parameterized\n", "    import pytest  # NOQA\n"], "../../repos/ChefBoost/": [], "../../repos/ChemicalX/": ["import unittest\n"], "../../repos/climin/": ["import unittest\n", "import nose\n"], "../../repos/CLTK/": ["import unittest\n", "import unittest\r\n"], "../../repos/Coach/": ["import rl_coach.tests.utils.test_utils as test_utils\n", "import pytest\n"], "../../repos/Cogitare/": ["import unittest\n", "import pytest\n"], "../../repos/Cornac/": ["import unittest\n"], "../../repos/Couler/": ["import unittest\n"], "../../repos/CoverTree/": [], "../../repos/Crab/": ["import unittest\n"], "../../repos/d3py/": ["import unittest\n"], "../../repos/Dash/": ["import unittest\n", "from fixtures import (  # noqa: F401\n", "from pytest import approx\n", "    import mimesis\n", "import pytest\n", "from pytest import warns\n", "from flaky import flaky\n"], "../../repos/data-science-ipython-notebooks/": ["import unittest2 as unittest\n"], "../../repos/Data_Driven_Code/": [], "../../repos/deap/": ["import unittest\n", "from unittest import skipIf\n", "from nose import with_setup\n"], "../../repos/decision-weights/": [], "../../repos/Dedupe/": ["import unittest\n", "import pytest\n"], "../../repos/Deep_High-Resolution-Net/": [], "../../repos/Deepchecks/": ["import pytest\n"], "../../repos/deepface/": [], "../../repos/DeepPavlov/": ["import pytest\n"], "../../repos/Detecto/": ["import pytest\n"], "../../repos/Detectron/": ["import unittest\n"], "../../repos/detectron2/": ["import unittest\n", "from unittest import TestCase\n", "from unittest import mock\n"], "../../repos/Determined/": ["import requests_mock\n", "import pytest\n", "from unittest import mock\n"], "../../repos/Diffusion_Segmentation/": [], "../../repos/DIGITS/": ["from digits import test_utils\n", "import unittest\n", "from . import test_utils\n"], "../../repos/Distance/": [], "../../repos/DL_Translate/": ["import pytest\n"], "../../repos/Dora/": [], "../../repos/dowel/": ["import pytest\n", "from unittest import mock\n"], "../../repos/dream-creator/": [], "../../repos/DrQA/": [], "../../repos/dtaidistance/": ["import pytest\n"], "../../repos/editdistance/": ["import unittest\n"], "../../repos/Edward/": [], "../../repos/emcee/": ["from unittest import TestCase\n", "import pytest\n"], "../../repos/Evidently/": ["import pytest\n", "from pytest import approx\n"], "../../repos/evostra/": [], "../../repos/face_recognition/": ["import unittest\n"], "../../repos/Featureforge/": ["import unittest\n", "from unittest import TestCase\n"], "../../repos/FEDOT/": ["import pytest\n", "from testfixtures import LogCapture\n"], "../../repos/fuku-ml/": ["import unittest\n"], "../../repos/Fuzzy_Wuzzy/": ["import unittest\n", "from hypothesis import given, assume, settings\n", "import pytest\n"], "../../repos/garage/": ["import pytest\n", "from unittest import mock\n"], "../../repos/genius/": [], "../../repos/gensim/": ["import unittest\n", "from testfixtures import log_capture\n", "import pytest\n"], "../../repos/ggplot/": ["import unittest\n"], "../../repos/Gradio/": ["import unittest\n"], "../../repos/group-lasso/": [], "../../repos/Gym/": ["import unittest\n", "import pytest\n"], "../../repos/hebel/": ["import unittest\n"], "../../repos/Hub/": ["from pytest_cases import parametrize_with_cases  # type: ignore\n", "import pytest\n"], "../../repos/hyperopt/": ["    import unittest\n", "    import unittest2 as unittest\n"], "../../repos/igel/": ["import pytest\n"], "../../repos/igraph/": ["import doctest\n", "import unittest\n"], "../../repos/Image-to-Image_Translation_with_Conditional_Adversarial_Networks/": [], "../../repos/imbalanced-ensemble/": ["from pytest import warns as _warns\n", "import pytest\n"], "../../repos/imbalanced-learn/": ["from pytest import raises\n", "import pytest\n"], "../../repos/implicit/": ["import unittest\n", "import pytest\n"], "../../repos/imutils/": [], "../../repos/Intel(R)_Extension_for_Scikit-learn/": ["import unittest\n", "    import unittest\n", "import pytest\n", "import unittest\r\n", "import pytest\r\n"], "../../repos/IoT_Owl/": [], "../../repos/ipychart/": ["import pytest\n"], "../../repos/JAX/": ["import unittest\n", "from unittest import skip, SkipTest\n", "from unittest import SkipTest, skipIf\n", "from examples import control\n", "from examples import resnet50\n", "import pytest\n", "from unittest import SkipTest\n", "from unittest import SkipTest, skip, skipIf\n", "from absl.testing import parameterized\n", "from examples import kernel_lsq\n", "from absl.testing import absltest, parameterized\n"], "../../repos/jellyfish/": ["import pytest\n"], "../../repos/jieba/": ["import unittest\n"], "../../repos/Jina_AI/": ["from pytest_kind import KindCluster\n", "from pytest_kind import cluster\n", "import pytest\n", "from unittest import mock\n"], "../../repos/kaggle-accelerometer/": [], "../../repos/kaggle-advertised-salaries/": [], "../../repos/kaggle-bestbuy_big/": [], "../../repos/kaggle-bestbuy_small/": [], "../../repos/kaggle-blackbox/": [], "../../repos/kaggle-cifar/": [], "../../repos/kaggle_acquire-valued-shoppers-challenge/": [], "../../repos/kaggle_amazon/": [], "../../repos/Kaggle_Dogs_vs._Cats/": [], "../../repos/Kaggle_Galaxy_Challenge/": [], "../../repos/Kaggle_Gender/": [], "../../repos/kaggle_insults/": [], "../../repos/Kaggle_Merck/": [], "../../repos/Kaggle_Stackoverflow/": [], "../../repos/Karate_Club/": [], "../../repos/Kartograph.py/": [], "../../repos/keras/": ["import unittest\n", "from unittest import mock\n", "import doctest  # pylint: disable=g-import-not-at-top,g-bad-import-order\n", "from keras.testing_infra import test_utils\n", "from absl.testing import parameterized\n", "import doctest\n"], "../../repos/Keras_Tuner/": ["import pytest\n"], "../../repos/KoNLPy/": ["import pytest\n"], "../../repos/Lambdo/": ["import unittest\n"], "../../repos/Lasagne/": ["import pytest\n"], "../../repos/Learnergy/": [], "../../repos/LightFM/": ["import pytest\n"], "../../repos/lightly/": ["import unittest\n", "import pytest\n"], "../../repos/Lightwood/": ["import unittest\n"], "../../repos/Little_Ball_of_Fur/": [], "../../repos/loso/": [], "../../repos/Lucent/": ["import pytest\n"], "../../repos/machine_learning/": ["import pytest\n"], "../../repos/Mars/": ["from ....tests.core import flaky\n", "from ....tests import flaky\n", "from ....tests.core import flaky, require_hadoop\n", "import pytest\n"], "../../repos/matplotlib/": ["    from matplotlib import _contour  # noqa: ensure lazy-loaded module *is* loaded.\n", "from pytest import approx\n", "    from matplotlib import _tri  # noqa: ensure lazy-loaded module *is* loaded.\n", "from unittest import mock\n", "    from unittest import TestCase\n", "import pytest\n", "    import pytest\n"], "../../repos/Maze/": ["from pytest import raises\n", "import pytest\n"], "../../repos/metaworld/": ["import pytest\n"], "../../repos/metric-learn/": ["import unittest\n", "import pytest\n"], "../../repos/Microsoft_Recommenders/": ["from unittest import mock\n", "import pytest\n", "    import pytest\n", "import pytest\r\n", "from pytest_mock import MockerFixture\n"], "../../repos/milk/": ["    from nose import SkipTest\n"], "../../repos/MindsDB/": ["import unittest\n"], "../../repos/MiraiML/": [], "../../repos/ML-From-Scratch/": [], "../../repos/ML/": [], "../../repos/mlens/": [], "../../repos/mljar-supervised/": ["import unittest\n"], "../../repos/mlxtend/": ["import unittest\n", "import pytest\n"], "../../repos/modAL/": ["import unittest\n"], "../../repos/MXNet/": ["import unittest\n", "    from unittest import mock\n", "    import nose\n", "import pytest\n", "    import pytest\n", "import doctest\n"], "../../repos/NALP/": [], "../../repos/neon/": ["import pytest\n"], "../../repos/neonrvm/": [], "../../repos/NetworkX/": ["from pytest import raises\n", "from pytest import approx\n", "import pytest\n", "        import pytest\n", "    import pytest\n", "import pytest\r\n"], "../../repos/neural-dream/": [], "../../repos/neural-style-pt/": [], "../../repos/Neural_Networks_and_Deep_Learning/": [], "../../repos/NeuralTalk/": [], "../../repos/Neuraxle/": ["from pytest import skip\n", "from unittest import TestCase\n", "import pytest\n"], "../../repos/neurolab/": ["import doctest\n"], "../../repos/Neuron/": [], "../../repos/NeuroNER/": ["import unittest\n"], "../../repos/neuropredict/": ["from pytest import raises\n"], "../../repos/nilearn/": ["import pytest\n"], "../../repos/NLTK/": ["    import pytest\n", "import unittest\n", "from unittest import TestCase\n", "import pytest\n"], "../../repos/nn_builder/": ["import pytest\n"], "../../repos/Numba/": ["import unittest\n", "from unittest import skipUnless\n", "from unittest import skip\n", "from numba.cuda.testing import unittest, ContextResettingTestCase\n", "from unittest import TestCase, skipIf\n", "from numba.tests.support import TestCase, unittest\n", "        from numba import int32, float32    # import the types\n", "from numba.tests.support import (TestCase, MemoryLeakMixin, unittest,\n", "from numba.tests.support import unittest, TestCase\n", "from numba.cuda.testing import unittest, CUDATestCase, skip_on_cudasim\n", "from unittest import mock\n", "from numba.cuda.testing import skip_on_cudasim, unittest, CUDATestCase\n", "from numba.cuda.testing import unittest, SerialMixin, skip_on_cudasim\n", "from numba.cuda.testing import unittest, skip_on_cudasim, CUDATestCase\n", "from numba.cuda.testing import unittest\n", "from unittest import TestCase\n", "from numba.cuda.testing import unittest, ContextResettingTestCase, ForeignArray\n", "from numba.cuda.testing import unittest, CUDATestCase\n", "from numba.tests.support import (TestCase, unittest, skip_py38_or_later,\n", "from numba.cuda.testing import CUDATestCase, skip_on_cudasim, unittest\n", "from numba.testing import unittest\n"], "../../repos/numpic/": ["import unittest\n", "import unittest2 as unittest\n", "import pytest\n", "from nupic.support.unittesthelpers.testcasebase import unittest\n"], "../../repos/numpy-ML/": [], "../../repos/NumPy/": ["import unittest\n", "        import doctest\n", "from hypothesis import given\n", "    import unittest, contextlib, tempfile, shutil\n", "from unittest import mock\n", "from pytest import param\n", "        import nose  # noqa: F401\n", "from hypothesis import given, settings, Verbosity\n", "    import nose\n", "import sys, platform, re, pytest\n", "import pytest\n", "        import pytest\n", "from unittest import TestCase\n", "from hypothesis import given, strategies as st\n", "import hypothesis\n", "import doctest\n", "import pytest, math, re\n", "        from pytest import warns\n"], "../../repos/NuPIC/": ["import unittest\n", "import unittest2 as unittest\n", "import pytest\n", "from nupic.support.unittesthelpers.testcasebase import unittest\n"], "../../repos/NuPIC_Studio/": [], "../../repos/nut/": ["import nose\n"], "../../repos/open-solution-data-science-bowl-2018/": [], "../../repos/open-solution-googleai-object-detection/": ["from object_detection.utils import test_utils\n"], "../../repos/open-solution-home-credit/": [], "../../repos/open-solution-salt-identification/": [], "../../repos/open-solution-ship-detection/": [], "../../repos/open-solution-toxic-comments/": [], "../../repos/open-solution-value-prediction/": [], "../../repos/Open_Mining/": ["import unittest\n"], "../../repos/OpenFace/": [], "../../repos/OPFython/": ["import pytest\n"], "../../repos/Optuna/": ["from pytest import LogCaptureFixture\n", "import pytest\n", "from unittest import mock\n"], "../../repos/Opytimizer/": ["import pytest\n"], "../../repos/Orange/": ["from unittest import TestResult, TextTestRunner\n", "import unittest\n", "from unittest import mock\n", "from doctest import DocTestSuite, ELLIPSIS, NORMALIZE_WHITESPACE\n", "    import unittest\n", "from unittest import TestCase\n", "from unittest import skip\n", "import baycomp\n"], "../../repos/Pandas/": ["from hypothesis import given\n", "import pytest\n", "from hypothesis import (\n", "        import pytest\n", "import hypothesis\n", "from hypothesis import strategies as st\n"], "../../repos/Parris/": [], "../../repos/Pattern/": ["import unittest\n"], "../../repos/PCV/": [], "../../repos/Pebl/": [], "../../repos/Petrel/": ["import unittest\n"], "../../repos/pgmpy/": ["    import pytest\n", "import unittest\n", "from unittest import TestCase\n", "import unittest\r\n"], "../../repos/pkuseg-python/": [], "../../repos/plotly/": ["from unittest import skipIf\n", "from pytest import approx\n", "from unittest import mock\n", "import pytest\n", "from unittest import skip\n", "from unittest import TestCase\n", "from unittest import TestCase, SkipTest\n"], "../../repos/Polyglot/": ["import unittest\n"], "../../repos/Prodmodel/": ["import unittest\n", "import pytest\n"], "../../repos/prophet/": ["from unittest import TestCase\n", "from unittest import TestCase, skipUnless\n"], "../../repos/PyBrain/": ["import doctest\n", "from doctest import DocTestSuite, ELLIPSIS, REPORT_ONLY_FIRST_FAILURE, \\\n", "from unittest import TestSuite, TestLoader, TextTestRunner\n", "from unittest import TestLoader, TestSuite, TextTestRunner\n"], "../../repos/pycascading/": [], "../../repos/PyCM/": [], "../../repos/pydeep/": [], "../../repos/PyDexter/": [], "../../repos/PyDy/": [], "../../repos/Pyevolve/": ["import nose\n", "from unittest import TestCase\n", "import unittest\n"], "../../repos/pygal/": ["from pytest import raises\n", "import pytest\n"], "../../repos/PyGrid/": ["import pytest\n"], "../../repos/pyhsmm/": [], "../../repos/Pylearn2/": ["    import unittest\n", "import unittest\n", "import nose\n"], "../../repos/PyMC/": ["from pytest import raises\n", "import unittest\n", "import pytest\n"], "../../repos/PyNLPl/": [], "../../repos/PyOD/": ["import unittest\n"], "../../repos/PyQtGraph/": ["    import examples\n", "import pytest\n"], "../../repos/PySS3/": ["import pytest\n"], "../../repos/PyStanfordDependencies/": ["import unittest\n"], "../../repos/pytessarct/": ["import pytest\n", "from unittest import mock\n"], "../../repos/python-recsys/": ["from baseline import Baseline #Import the test class we've just created\n", "from nose import with_setup\n"], "../../repos/python-timbl/": [], "../../repos/python-ucto/": [], "../../repos/python-zpar/": [], "../../repos/PyTorch/": ["import unittest\n", "from hypothesis import given, settings, example\n", "import pytest  # noqa: F401\n", "from hypothesis import assume, given, settings, HealthCheck\n", "from hypothesis import assume, given, note\n", "from unittest import skipIf\n", "from hypothesis import given\n", "from unittest import mock\n", "    import unittest\n", "import pytest\n", "from hypothesis import given, strategies as st, settings\n", "from hypothesis import given, settings, strategies as st\n", "from hypothesis import given, settings, HealthCheck\n", "from hypothesis import example, settings, given\n", "import doctest\n", "from hypothesis import given, assume, settings\n", "from unittest import TestCase, mock\n", "from hypothesis import assume\n", "from hypothesis import given, settings, Verbosity\n", "from hypothesis import given, settings, assume\n", "    import pytest\n", "from hypothesis import assume, given, settings\n", "from hypothesis import settings\n", "from hypothesis import settings, HealthCheck\n", "from unittest import TestCase\n", "import hypothesis\n", "from hypothesis import strategies as st\n", "from hypothesis import assume, given\n", "from hypothesis import HealthCheck, given, settings\n", "from hypothesis import settings as ht_settings\n", "from hypothesis import given, settings\n", "from hypothesis import given, assume\n", "import hypothesis as hy\n"], "../../repos/PyTorch_Geometric_Temporal/": [], "../../repos/PyTorch_Lightning/": ["import unittest\n", "import pytest\n", "from unittest import mock\n"], "../../repos/PyTorch_Lightning_Bolts/": ["from unittest import TestCase\n", "import pytest\n", "from unittest import mock\n"], "../../repos/PyTorchCV/": [], "../../repos/Quepy/": ["import unittest\n"], "../../repos/Rasa/": ["from moto import mock_dynamodb2\n", "from unittest import mock\n", "import fakeredis\n", "import responses\n", "import pytest\n", "from aioresponses import aioresponses\n", "from moto import mock_s3\n", "        import fakeredis\n", "        from mongomock import MongoClient\n", "import pytest\r\n", "from tests.core import test_utils\n"], "../../repos/Restricted_Boltzmann_Machines/": [], "../../repos/retinaface/": [], "../../repos/RexMex/": ["import unittest\n"], "../../repos/River/": ["import pytest\n"], "../../repos/RLlib/": ["import unittest\n", "from unittest import mock\n", "import ray.dashboard.modules.test.test_utils as test_utils\n", "import pytest\n", "from moto import mock_s3\n", "    import pytest\n", "import moto\n", "from testfixtures import Replacer\n", "import ray._private.test_utils as test_utils\n", "from moto import mock_ec2, mock_iam\n", "    import pytest_timeout\n"], "../../repos/Roboschool/": [], "../../repos/Rosetta/": ["import unittest\n"], "../../repos/Ruffus/": ["import unittest\n"], "../../repos/Scikit-Image/": ["import unittest\n", "from pytest import importorskip, raises, fixture\n", "from pytest import raises, warns\n", "import pytest\n", "        import pytest\n", "from pytest import fixture\n", "from pytest import importorskip\n", "import pytest\r\n"], "../../repos/scikit-learn/": ["import unittest\n", "from pytest import approx\n", "import pytest\n", "    import pytest\n", "from unittest import TestCase\n", "from pytest import importorskip\n"], "../../repos/scikit-learn_tutorials/": [], "../../repos/scikit-multiflow/": ["import pytest   # noqa\n", "import pytest\n"], "../../repos/Scikit-Opt/": ["import unittest\n"], "../../repos/scikit-plot/": ["import unittest\n"], "../../repos/SciPy/": ["from pytest import raises\n", "from pytest import raises as assert_raises, warns\n", "from pytest import raises, warns\n", "from pytest import raises as assert_raises\n", "import pytest\n", "from pytest import warns as assert_warns\n", "        import pytest\n", "    import pytest\n", "import numpy as np  # np is actually used, in the decorators below.\n", "from pytest import raises as assert_raises, deprecated_call\n"], "../../repos/Scipy_Tutorials/": [], "../../repos/Seaborn/": ["import pytest\n", "from pytest import approx\n"], "../../repos/Self-supervised_learning/": ["from unittest import TestCase\n", "import pytest\n", "from unittest import mock\n"], "../../repos/sentiment-analyzer/": [], "../../repos/sequitur/": [], "../../repos/Serpent.AI/": ["import pytest\n"], "../../repos/Shapley/": ["import unittest\n", "import pytest\n"], "../../repos/SimpleAI/": ["import unittest\n"], "../../repos/SimpleCV/": [], "../../repos/Sklearn-genetic-opt/": ["import pytest\n"], "../../repos/SKLL/": [], "../../repos/skorch/": ["import unittest\n", "from flaky import flaky\n", "import pytest\n"], "../../repos/sktime/": ["from pytest import raises\n", "import pytest\n"], "../../repos/SLM_Lab/": ["from flaky import flaky\n", "import pytest\n"], "../../repos/Snips_NLU/": ["import doctest\n", "import unittest\n", "from unittest import TestCase\n", "from unittest import skipIf\n"], "../../repos/SnowNLP/": [], "../../repos/spaCy/": ["from hypothesis import given\n", "from pytest import approx\n", "from unittest import mock\n", "import pytest\n", "from unittest import TestCase\n", "import hypothesis\n", "import pytest\r\n"], "../../repos/spammy/": ["import unittest\n"], "../../repos/SparklingPandas/": ["import unittest2\n"], "../../repos/Spearmint/": [], "../../repos/Spinning_Up/": ["import unittest\n"], "../../repos/stacked_generalization/": ["import unittest\n"], "../../repos/stanford-corenlp-python/": [], "../../repos/statsmodels/": ["import unittest\n", "import pytest\n", "    import pytest\n", "from pytest import warns\n", "            import pytest\n", "import statsmodels.stats.multivariate as smmv  # pytest cannot import test_xxx\n"], "../../repos/StellarGraph/": ["from .. import test_utils\n", "import pytest\n", "from .. import require_gpu, test_utils\n"], "../../repos/steppy-toolkit/": [], "../../repos/steppy/": ["import pytest\n"], "../../repos/Streamlit/": ["from pytest import raises\n", "import unittest\n", "import requests_mock\n", "from testfixtures import tempdir\n", "from unittest import mock\n", "import pytest\n", "from parameterized import parameterized\n", "from hypothesis import given, strategies as hst\n"], "../../repos/Suiron/": [], "../../repos/Superset/": ["from unittest import mock, skip\n", "from pytest import raises\n", "import unittest\n", "from pytest_mock import MockerFixture\n", "from unittest import mock\n", "from unittest import skipUnless\n", "from flask_testing import LiveServerTestCase\n", "from unittest import mock, skipUnless\n", "import pytest\n", "from pytest import mark\n", "from unittest import TestCase\n", "from pytest import fixture\n", "from pytest_mock import MockFixture\n", "from pytest import fixture, mark\n", "from flask_testing import TestCase\n", "from parameterized import parameterized\n", "import doctest\n"], "../../repos/Surprise/": ["import pytest\n"], "../../repos/SVM_Explorer/": [], "../../repos/SymPy/": ["import doctest as pdoctest  # avoid clashing with our doctest() function\n", "from sympy.series.gruntz import compare, mrv, rewrite, mrv_leadterm, gruntz, \\\n", "from doctest import DocTestFinder, DocTestRunner\n", "import pytest\n", "    import pytest\n"], "../../repos/Synthia/": ["import pytest\n"], "../../repos/TensorFlow/": ["import unittest\n", "from unittest import mock\n", "from tensorflow.compiler.mlir.tfr.python import test_utils\n", "from unittest import SkipTest  # pylint: disable=g-importing-member\n", "  from unittest import mock  # pylint: disable=g-import-not-at-top,g-importing-member\n", "from absl.testing import parameterized\n", "from tensorflow.lite.tools import test_utils\n", "import doctest\n", "from tensorflow.compiler.tests import test_utils\n", "from tensorflow.python.util.protobuf import compare\n", "import doctest  # pylint: disable=g-bad-import-order\n"], "../../repos/textacy/": ["import pytest\n"], "../../repos/TextBlob/": ["import nose\n", "from unittest import TestCase\n", "from unittest import TestCase, main\n", "import unittest\n"], "../../repos/TFLearn/": ["import unittest\n"], "../../repos/Thampi/": ["import unittest\n"], "../../repos/Theano/": ["import unittest\n", "from unittest import TestCase\n", "import nose\n", "from parameterized import parameterized\n"], "../../repos/thinking_bayes/": [], "../../repos/thinking_stats_2/": ["import unittest\n"], "../../repos/topik/": ["import unittest\n"], "../../repos/Towhee/": ["import doctest\n", "import unittest\n", "from unittest import mock\n"], "../../repos/TPOT/": ["import unittest\n", "import nose\n", "from unittest import TestCase\n"], "../../repos/TResNet:_High_Performance_GPU-Dedicated_Architecture/": [], "../../repos/TResNet:_Simple_and_powerful_neural_network_library_for_python/": ["import doctest\n"], "../../repos/Vaex/": ["import test_utils\n", "import unittest\n", "import pytest\n", "from unittest import mock\n"], "../../repos/vispy/": ["import unittest\n", "from unittest import mock\n", "import pytest\n", "from unittest import SkipTest\n", "    import pytest\n", "        import pytest\n"], "../../repos/visualize_ML/": [], "../../repos/wiki_challenge/": [], "../../repos/windML/": ["import unittest\n"], "../../repos/Xcessiv/": ["import unittest\n"], "../../repos/XGBoost/": ["from hypothesis import strategies, given, settings, assume, note\n", "import unittest\n", "from hypothesis import strategies, given, settings, note\n", "import pytest\n", "from hypothesis import given, strategies, assume, settings, note\n", "from hypothesis import given, strategies, settings\n", "from hypothesis import given, strategies, settings, note\n", "from hypothesis import given, strategies, assume, settings\n", "from hypothesis import given, settings, note, HealthCheck\n", "from hypothesis import strategies\n", "import hypothesis\n", "import pytest\r\n"], "../../repos/xRBM/": [], "../../repos/YAlign/": ["import unittest\n"], "../../repos/yase/": ["import unittest\n"], "../../repos/zipline/": ["import unittest\n", "from zipline import examples\n", "from unittest import skipIf\n", "from nose_parameterized import parameterized\n", "from unittest import TestCase\n", "from unittest import TestCase, skipIf\n", "from testfixtures import TempDirectory\n"]}